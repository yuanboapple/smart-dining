{"ast":null,"code":"var _jsxFileName = \"/Users/yuanbo/Desktop/Bob/smart-dining/src/components/CustomMenu/CustomMenu.jsx\";\nimport { Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // 处理 pathname\n\nconst getOpenKeys = string => {\n  let newStr = '',\n      newArr = [],\n      arr = string.split('/').map(i => '/' + i);\n\n  for (let i = 1; i < arr.length - 1; i++) {\n    newStr += arr[i];\n    newArr.push(newStr);\n  }\n\n  return newArr;\n};\n\nconst CustomMenu = props => {\n  const [state, setstate] = useState({\n    openKeys: [],\n    selectedKeys: []\n  });\n  let {\n    openKeys,\n    selectedKeys\n  } = state; // 页面刷新的时候可以定位到 menu 显示\n\n  useEffect(() => {\n    let {\n      pathname\n    } = props.location;\n    setstate(prevState => {\n      return { ...prevState,\n        selectedKeys: [pathname],\n        openKeys: getOpenKeys(pathname)\n      };\n    });\n  }, [props]); // 只展示一个Submenu\n\n  const onOpenChange = openKeys => {\n    setstate(prevState => {\n      if (openKeys.length < 2) return { ...prevState,\n        openKeys\n      };\n      const lastOpenKey = openKeys[openKeys.length - 1];\n\n      if (lastOpenKey.includes(openKeys[0])) {\n        return { ...prevState,\n          openKeys\n        };\n      } else {\n        return { ...prevState,\n          openKeys: [lastOpenKey]\n        };\n      }\n    });\n  };\n\n  const renderMenuItem = ({\n    key,\n    icon,\n    title\n  }) => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, icon && /*#__PURE__*/React.createElement(Icon, {\n    type: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, title))); // 循环遍历数组中的子项 subs ，生成子级 menu\n\n\n  const renderSubMenu = ({\n    key,\n    icon,\n    title,\n    subs\n  }) => {\n    return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n      key: key,\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, icon && /*#__PURE__*/React.createElement(Icon, {\n        type: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, title)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, subs && subs.map(item => {\n      return item.subs && item.subs.length > 0 ? renderSubMenu(item) : renderMenuItem(item);\n    }));\n  };\n\n  const onClickMenu = menu => {\n    const {\n      key\n    } = menu;\n    setstate(prevState => ({ ...prevState,\n      selectedKeys: [key]\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    mode: \"inline\",\n    theme: \"dark\",\n    openKeys: openKeys,\n    selectedKeys: selectedKeys,\n    onClick: onClickMenu,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, props.menu && props.menu.map(item => item.subs && item.subs.length > 0 ? renderSubMenu(item) : renderMenuItem(item)));\n};\n\nexport default withRouter(CustomMenu);","map":{"version":3,"sources":["/Users/yuanbo/Desktop/Bob/smart-dining/src/components/CustomMenu/CustomMenu.jsx"],"names":["Menu","React","useState","Link","withRouter","getOpenKeys","string","newStr","newArr","arr","split","map","i","length","push","CustomMenu","props","state","setstate","openKeys","selectedKeys","useEffect","pathname","location","prevState","onOpenChange","lastOpenKey","includes","renderMenuItem","key","icon","title","renderSubMenu","subs","item","onClickMenu","menu"],"mappings":"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","sourcesContent":["import { Menu } from 'antd'\nimport React, { useState } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\n\n// 处理 pathname\nconst getOpenKeys = string => {\n    let newStr = '',\n        newArr = [],\n        arr = string.split('/').map(i => '/' + i)\n    for (let i = 1; i < arr.length - 1; i++) {\n        newStr += arr[i]\n        newArr.push(newStr)\n    }\n    return newArr\n}\n\nconst CustomMenu = props => {\n    const [state, setstate] = useState({\n        openKeys: [],\n        selectedKeys: []  \n    })\n    let {openKeys, selectedKeys} = state\n\n    // 页面刷新的时候可以定位到 menu 显示\n    useEffect(() => {\n        let { pathname } = props.location\n        setstate(prevState => {\n            return {\n                ...prevState,\n                selectedKeys: [pathname],\n                openKeys: getOpenKeys(pathname)\n            }\n        })\n    }, [props])\n    \n    // 只展示一个Submenu\n    const onOpenChange = openKeys => {\n        setstate(prevState => {\n            if(openKeys.length < 2) return {...prevState, openKeys}\n            const lastOpenKey = openKeys[openKeys.length - 1]\n            if(lastOpenKey.includes(openKeys[0])) {\n                return {...prevState, openKeys}\n            } else {\n                return {...prevState, openKeys: [lastOpenKey]}\n            }\n        })\n    }\n\n    const renderMenuItem = ({ key, icon, title }) => (\n        <Menu.Item key={key}>\n            <Link to={key}>\n                {icon && <Icon type={icon} />}\n                <span>{title}</span>\n            </Link>\n        </Menu.Item>\n    )\n\n    // 循环遍历数组中的子项 subs ，生成子级 menu\n    const renderSubMenu = ({ key, icon, title, subs }) => {\n        return (\n            <Menu.SubMenu\n                key={key}\n                title={\n                    <span>\n                        {icon && <Icon type={icon} />}\n                        <span>{title}</span>\n                    </span>\n                }>\n                {subs &&\n                    subs.map(item => {\n                        return item.subs && item.subs.length > 0 ? renderSubMenu(item) : renderMenuItem(item)\n                    })}\n            </Menu.SubMenu>\n        )\n    }\n    const onClickMenu = (menu) => {\n        const {key} = menu\n        setstate(prevState => ({\n            ...prevState,\n            selectedKeys: [key]\n        }))\n    }\n    return (\n        <Menu\n            mode=\"inline\"\n            theme=\"dark\"\n            openKeys={openKeys}\n            selectedKeys={selectedKeys}\n            onClick={onClickMenu}\n            onOpenChange={onOpenChange}\n        >\n            {props.menu && props.menu.map(item => (\n                item.subs && item.subs.length > 0 ? renderSubMenu(item) : renderMenuItem(item)\n            )\n            )}\n        </Menu>\n    )\n}\nexport default  withRouter(CustomMenu)"]},"metadata":{},"sourceType":"module"}